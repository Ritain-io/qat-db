---
language: ruby
rvm:
  - 2.5

services:
  - docker

stages:
  - test
  - release

before_install:
  - gem install ruby-oci8 -v '2.2.7' --source 'https://rubygems.org/' --without-instant-client

jobs:
  include:
    - stage: test
      name: "version"
      script: ruby -e "require './lib/qat/db/version'; raise StandardError.new unless Gem::Specification::load('qat-db.gemspec').version.to_s == QAT::DB::VERSION"
      if: tag IS blank

    - name: "documentation"
      script: bundle exec rake qat:devel:validate_yard_doc
      if: tag IS blank

    - name: "static"
      script: bundle exec rake qat:devel:static_analysis:validation
      if: tag IS blank

    - name: "unit tests"
      env: ELK_VERSION=7.2.0 ES_USER=elastic ES_PASSWD=changeme
      script:
        - docker-compose up -d
        - until curl --user "$ES_USER:$ES_PASSWD" --silent -XGET --fail http://localhost:9200; do printf '.'; sleep 1; done
        - until curl --user "$ES_USER:$ES_PASSWD" --silent -XGET --fail http://localhost:9600; do printf '.'; sleep 1; done
        - bundle exec rake qat:devel:tests:run
      if: tag IS blank

    - name: "gem build"
      script: gem build *.gemspec
      if: tag IS blank

    - stage: release
      name: "gem release"
      script: echo "Deploying to rubygems.org ..."
      deploy:
        provider: rubygems
        api_key: $RUBYGEMS_API_KEY
        gemspec: qat-db.gemspec
        on:
          tags: true
      if: tag IS present